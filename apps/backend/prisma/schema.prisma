// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  BUYER
  SELLER
  ADMIN
}

enum SellerStatus {
  PENDING
  VERIFIED
  REJECTED
}

model User {
  id              String         @id @default(uuid())
  email           String         @unique
  name            String?
  phone           String?
  password        String
  roles           Role[]         @default([BUYER])
  isEmailVerified Boolean        @default(false)
  sellerStatus    SellerStatus? 
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  sellerProfile       SellerProfile?
  addresses           Address[]
  products            Product[]
  sellerApplication   SellerApplication?
}

model SellerProfile {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  shopName  String
  slug      String?  @unique
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  name       String
  line1      String
  line2      String?
  city       String
  state      String?
  postalCode String
  country    String
  phone      String?
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model SellerApplication {
  id         String       @id @default(uuid())
  user       User         @relation(fields: [userId], references: [id])
  userId     String       @unique
  status     SellerStatus @default(PENDING)
  documents  Json?
  message    String?
  approvedBy String?
  approvedAt DateTime?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
